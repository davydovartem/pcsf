{
  "scopeName": "source.pcf",
  "patterns": [
    {
      "name": "keyword.control.a-quantifier.pcf",
      "match": "[!]"
    },
    {
      "name": "keyword.control.e-quantifier.pcf",
      "match": "[?]"
    },
    {
      "name": "entity.name.function.pcf",
      "match": "\\b[a-zA-Z][A-Za-z0-9_]*\\b(?=\\()"
    },
    {
      "name": "variable.parameter.pcf",
      "match": "\\b[a-zA-Z][A-Za-z0-9_]*\\b(?!\\()"
    },
    {
      "name": "punctuation.definition.parameters.pcf",
      "match": "[(),]"
    },
    {
      "name": "keyword.operator.comparison.pcf",
      "match": ">=|<=|>|<|=|!="
    },
    {
      "name": "keyword.operator.arithmetic.pcf",
      "match": "[+\\-*/]"
    },
    {
      "name": "keyword.control.directive.pcf",
      "begin": "\\$",
      "end": "$|\\n",
      "patterns": [
        {
          "match": "\\s*([A-Z][A-Za-z0-9_]*\\b(?=\\())",
          "captures": {
            "1": {
              "name": "entity.name.function.pcf"
            }
          }
        },
        {
          "match": "[(),]",
          "name": "punctuation.definition.parameters.pcf"
        }
      ]
    },
    {
      "name": "comment.line.pcf",
      "match": "#.*"
    },
    {
      "name": "keyword.character.continuation.pcf",
      "match": "~"
    },
    {
      "name": "support.other.list.pcf",
      "begin": "\\[",
      "end": "\\]",
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    {
      "name": "string.quoted.double.pcf",
      "match": "\"[^\"]*\""
    },
    {
      "name": "constant.numeric.pcf",
      "match": "\\b\\d+\\b"
    }
  ],
  "repository": {}
}