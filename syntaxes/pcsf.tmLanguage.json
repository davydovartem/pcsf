{
  "scopeName": "source.pcsf",
  "patterns": [
    { "include": "#comment" },
    { "include": "#operator_neq" },
    { "include": "#quantifier_expression" },
    { "include": "#common" }
  ],
  "repository": {
    "comment": {
      "name": "comment.line.pcsf",
      "match": "#.*"
    },
    "operator_neq" : {
      "name" :"keyword.operator.comparison.pcsf",
      "match" : "!="
    },
    
    "quantifier_expression": {
      "begin": "(!)|(\\?)",
      "beginCaptures": {
        "1": { "name": "keyword.control.a-quantifier.pcsf" },
        "2": { "name": "keyword.control.e-quantifier.pcsf" }
      },
      "end": "(?=\\s*[!?])",
      "patterns": [
        { "include": "#variable" },
        { "include": "#predicate" },
        { "include": "#comment" },
        { "include": "#common" }
      ]
    },
    
    "variable": {
      "match": "\\b([a-zA-Z][A-Za-z0-9_]*)\\b(?!\\()",
      "captures": {
        "1": { "name": "variable.parameter.pcsf" }
      }
    },
    
    "predicate": {
      "begin": "\\b([a-zA-Z][A-Za-z0-9_]*)\\s*\\(",
      "beginCaptures": {
        "1": { "name": "entity.name.function.pcsf" }
      },
      "end": "\\)",
      "patterns": [
        { "include": "#variable" },
        { "include": "#predicate" },
        { "include": "#common" }
      ]
    },
    
    "common": {
      "patterns": [
        {
          "name": "entity.name.function.pcsf",
          "match": "\\b[a-zA-Z][A-Za-z0-9_]*\\b(?=\\()"
        },
        {
          "name": "punctuation.definition.parameters.pcsf",
          "match": "[(),]"
        },
        {
          "name": "keyword.operator.comparison.pcsf",
          "match": ">=|<=|>|<|="
        },
        {
          "name": "keyword.operator.arithmetic.pcsf",
          "match": "[+\\-*/]"
        },
        {
          "name": "keyword.control.directive.pcsf",
          "begin": "\\$",
          "end": "\\n",
          "patterns": [
            {
              "match": "\\s*([A-Z][A-Za-z0-9_]*\\b(?=\\())",
              "captures": {
                "1": {
                  "name": "entity.name.function.pcsf"
                }
              }
            },
            {
              "match": "[(),]",
              "name": "punctuation.definition.parameters.pcsf"
            }
          ]
        },
        {
          "name": "keyword.character.continuation.pcsf",
          "match": "~"
        },
        {
          "name": "support.other.list.pcsf",
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "include": "$self"
            }
          ]
        },
        {
          "name": "string.quoted.double.pcsf",
          "match": "\"[^\"]*\""
        },
        {
          "name": "constant.numeric.pcsf",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "keyword.operator.sets.pcsf",
          "match": "\\b(in|notin|subseteq)\\b"
        }
      ]
    }
  }
}